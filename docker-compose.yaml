version: '3.8'

services:
  # postgres:
  #   image: postgres:latest
  #   container_name: postgres
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_DB: task_tracker
  #   ports:
  #     - "5433:5432"
  #   volumes:
  #     - postgres:/var/lib/postgresql/data
  #     - ./create-db.sh:/docker-entrypoint-initdb.d/create-db.sh
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
  #     interval: 10s
  #     retries: 5
  #     start_period: 30s
  #     timeout: 10s
  mysql:
      image: mysql:latest
      container_name: mysql
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: task_tracker
      ports:
        - "3306:3306"
      volumes:
        - mysql:/var/lib/mysql
      healthcheck:
        test: ["CMD-SHELL", "mysqladmin ping -h localhost"]
        interval: 10s
        retries: 5
        start_period: 30s
        timeout: 10s

  user-command-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile.command
    container_name: user-command-service
    environment:
      DATABASE_URL: root:root@tcp(mysql:3306)/task_tracker
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy

  user-query-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile.query
    container_name: user-query-service
    environment:
      DATABASE_URL: root:root@tcp(mysql:3306)/task_tracker
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy

volumes:
  mysql:

